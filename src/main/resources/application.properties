#datesource
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/demo
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#热部署关闭
spring.devtools.restart.enabled: false

#访问相关配置
server.port=8081
#头像默认地址
userIconDefaultUrl=/images/icons/user.png

# redis 缓存相关配置
#Redis数据库索引（默认为0）
spring.redis.database=0
#redis 服务器地址
spring.redis.host=127.0.0.1
#端口号
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
#spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.pool.max-wait=-1
# 连接池中的最小空闲连接
#spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
#spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=5000


#日志输出级别
logging.level.com.example=trace
logging.file.path=C:/Users/11437/IdeaProjects/demo/src/main/resources/log

#oauth
justauth.enable=true
justauth.type.GITHUB.client-id=9496f669020577dc104e
justauth.type.GITHUB.client-secret=6136f7bfbe2dbd1bc45d55699ec7372682705dfa
justauth.type.GITHUB.redirect-uri=http://localhost:8081/oauth/github/callback
justauth.cache.type=default

# pagehelper properties
#pagehelper.offsetAsPageNum=true会将 RowBounds 中的 offset 参数当成 pageNum 使用，
# 可以用页码和页面大小两个参数进行分页。
pagehelper.offsetAsPageNum=true
#rowBoundsWithCount：默认值为false，该参数对使用 RowBounds 作为分页参数时有效。
# 当该参数设置为true时，使用 RowBounds 分页会进行 count 查询。
pagehelper.rowBoundsWithCount=true
#pageSizeZero：默认值为 false，当该参数设置为 true 时，如果 pageSize=0 或者
# RowBounds.limit = 0 就会查询出全部的结果（相当于没有执行分页查询，但是返回结果仍然是 Page 类型）。
pagehelper.pageSizeZero=true
#reasonable：分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页，
# pageNum>pages（超过总数时），会查询最后一页。默认false 时，直接根据参数进行查询。
pagehelper.reasonable=true
#params：为了支持startPage(Object params)方法，增加了该参数来配置参数映射，
# 用于从对象中根据属性名取值， 可以配置 pageNum,pageSize,count,pageSizeZero,reasonable，
# 不配置映射的用默认值，默认值为
# pageNum=pageNum;pageSize=pageSize;count=countSql;reasonable=reasonable;pageSizeZero=pageSizeZero。
pagehelper.params=pageNum=pageHelperStart;pageSize=pageHelperRows;
#supportMethodsArguments：支持通过 Mapper 接口参数来传递分页参数，默认值false，
# 分页插件会从查询方法的参数值中，自动根据上面 params 配置的字段中取值，查找到合适的值时就会自动分页。
# 使用方法可以参考测试代码中的 com.github.pagehelper.test.basic 包下的
# ArgumentsMapTest 和 ArgumentsObjTest。
pagehelper.supportMethodsArguments=false